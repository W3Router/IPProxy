代码修改原则：
1. 如果现有的代码能正常工作，就不要过度优化或改动
2. 最简单的解决方案往往是最好的
3. 遵循"最小改动原则"，只修改必要的部分
4. 在进行优化之前，先确认是否真的需要优化
5. 保持代码的可读性和可维护性比过度优化更重要
6. 不要为了使用新技术而改变已经稳定的代码
7. 修改代码前要充分理解现有代码的工作原理
8. 每次修改都要经过充分的测试验证
9. 保持代码的一致性，不要引入不必要的复杂性
10. 记录所有重要的修改和原因，方便后续维护

调试建议：
1. 先观察问题现象
2. 定位问题根源
3. 采用最小修改方案
4. 验证修改效果
5. 确保不引入新问题

// ... existing code ... 